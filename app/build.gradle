plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    //id 'kotlin-allopen'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
}
apply plugin: 'kotlin-allopen'
allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.bravedroid.watertracker.testing.OpenClass'
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")

        pickFirst "win32-x86-64/attach_hotspot_windows.dll"
        pickFirst "win32-x86/attach_hotspot_windows.dll"
    }

    defaultConfig {
        applicationId "com.bravedroid.watertracker"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.bravedroid.watertracker.TestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        //dataBinding true
    }
}

dependencies {
    //jvm
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    //android core
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.fragment:fragment-ktx:1.3.2"
    implementation "androidx.fragment:fragment:1.3.2"
    //ui
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //dagger:hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_ktx"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.nav"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.nav"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    //log
    implementation "com.jakewharton.timber:timber:$versions.timber"

    //test
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.arch.core:core-testing:$versions.arch"

    //android test
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "androidx.test.ext:junit:$versions.ext_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"

    //coroutine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines") {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    //Mockito framework test
    //testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.1.0"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.nhaarman_mockito"

    //truth test
    testImplementation "com.google.truth:truth:$versions.google_truth"
    androidTestImplementation "androidx.test.ext:truth:$versions.androidx_truth"
    androidTestImplementation "com.google.truth:truth:$versions.google_truth"

    //hilt android test
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hilt_android_testing"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.28-alpha"

    // Hamcrest library android test
    androidTestImplementation "org.hamcrest:hamcrest-library:$versions.hamcrest"

    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    debugImplementation "androidx.fragment:fragment-testing:1.3.2"
    // we need all open to run tests which  a we enable only for debug builds.
    project.tasks.whenTaskAdded {
        if (it.name == "testReleaseUnitTest") {
            it.enabled = false
        }
    }
}
